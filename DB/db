-- Drop the existing database and create a new one
DROP DATABASE IF EXISTS queueing;
CREATE DATABASE queueing;
USE queueing;

-- 1. Create tellers table
CREATE TABLE tellers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,  -- Store hashed passwords
    role ENUM('admin', 'teller') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- 2. Create queue table (no user_id, use NULL for userless entries)
CREATE TABLE queue (
    id INT AUTO_INCREMENT PRIMARY KEY,
    transaction_type ENUM('deposit', 'withdrawal', 'open_account') NOT NULL,
    queue_number INT NOT NULL,
    status ENUM('waiting', 'serving', 'done') DEFAULT 'waiting',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- 3. Create notifications table
CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    queue_id INT,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (queue_id) REFERENCES queue(id) ON DELETE CASCADE
) ENGINE=InnoDB;




-- Insert the Admin account (with password 'admin')
INSERT INTO tellers (username, password, role) 
VALUES ('admin', PASSWORD('admin'), 'admin');

-- Insert the Teller account (with password 'teller')
INSERT INTO tellers (username, password, role) 
VALUES ('teller', PASSWORD('teller'), 'teller');





ALTER TABLE queue ADD COLUMN transaction_type ENUM('deposit', 'withdraw', 'open_account') NOT NULL;


ALTER TABLE queue AUTO_INCREMENT = 100;
